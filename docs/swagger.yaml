definitions:
  cpu.InfoStat:
    properties:
      cacheSize:
        type: integer
      coreId:
        type: string
      cores:
        type: integer
      cpu:
        type: integer
      family:
        type: string
      flags:
        items:
          type: string
        type: array
      mhz:
        type: number
      microcode:
        type: string
      model:
        type: string
      modelName:
        type: string
      physicalId:
        type: string
      stepping:
        type: integer
      vendorId:
        type: string
    type: object
  models.Category:
    properties:
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      id:
        description: 主键
        type: integer
      img:
        description: 图片
        type: string
      name:
        description: 名称
        type: string
      params:
        type: string
      remark:
        description: 备注
        type: string
      sort:
        description: 排序
        type: string
      status:
        description: 状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.Config:
    properties:
      configId:
        description: 主键
        type: integer
      configKey:
        description: 键名
        type: string
      configName:
        description: 名称
        type: string
      configType:
        description: 是否系统内置(Y/N) 字典sys_yes_no
        type: string
      configValue:
        description: 键值
        type: string
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      deletedAt:
        type: string
      remark:
        description: 备注
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.Content:
    properties:
      cateId:
        description: 分类id
        type: string
      content:
        description: 内容
        type: string
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      id:
        description: 主键
        type: integer
      img:
        description: 图片
        type: string
      name:
        description: 名称
        type: string
      params:
        type: string
      remark:
        description: 备注
        type: string
      sort:
        description: 排序
        type: string
      status:
        description: 状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.Dept:
    properties:
      children:
        description: 子列表
        items:
          $ref: '#/definitions/models.Dept'
        type: array
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      deptId:
        description: 主键
        type: integer
      deptName:
        description: 名称
        type: string
      deptPath:
        description: 路径树
        type: string
      email:
        description: 负责人联系邮箱
        type: string
      leader:
        description: 负责人
        type: string
      params:
        type: string
      parentId:
        description: 上级主键
        type: integer
      phone:
        description: 负责人联系手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.DictData:
    properties:
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      cssClass:
        description: (未用)
        type: string
      dataScope:
        type: string
      default:
        description: (未用)
        type: string
      deletedAt:
        type: string
      dictId:
        description: 主键
        example: 1
        type: integer
      dictLabel:
        description: 标签
        type: string
      dictType:
        description: 类型
        type: string
      dictValue:
        description: 值
        type: string
      isDefault:
        description: (未用)
        type: string
      listClass:
        description: (未用)
        type: string
      params:
        type: string
      remark:
        description: 备注
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.DictType:
    properties:
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      dictId:
        description: 主键
        type: integer
      dictName:
        description: 名称
        type: string
      dictType:
        description: 类型
        type: string
      params:
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.FileDir:
    properties:
      children:
        items:
          $ref: '#/definitions/models.FileDir'
        type: array
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      id:
        description: 主键
        type: integer
      label:
        description: 名称
        type: string
      params:
        type: string
      path:
        description: 路径树
        type: string
      pid:
        description: 父id
        type: integer
      sort:
        description: 排序
        type: integer
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.FileInfo:
    properties:
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      fullUrl:
        description: 全路径
        type: string
      id:
        description: 主键
        type: integer
      name:
        description: 名称
        type: string
      params:
        type: string
      pid:
        description: 父级id
        type: integer
      size:
        description: 大小
        type: string
      source:
        description: 源
        type: string
      type:
        description: 类型
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
      url:
        description: 路径
        type: string
    type: object
  models.Login:
    properties:
      ccode:
        description: 验证码
        type: string
      cid:
        description: 验证码id
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    required:
    - ccode
    - cid
    - password
    - username
    type: object
  models.LoginLog:
    properties:
      browser:
        description: 浏览器
        type: string
      createdAt:
        type: string
      creator:
        description: 创建人
        type: string
      dataScope:
        description: 数据
        type: string
      deletedAt:
        type: string
      infoId:
        description: 主键
        type: integer
      ip:
        description: 登录ip地址
        type: string
      location:
        description: 登录ip归属地
        type: string
      loginTime:
        description: 登录时间
        type: string
      msg:
        description: 登录信息
        type: string
      os:
        description: 操作系统
        type: string
      params:
        type: string
      platform:
        description: 系统平台
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 登录状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
      username:
        description: 用户名
        type: string
    type: object
  models.Menu:
    properties:
      breadcrumb:
        description: 面包屑
        type: string
      children:
        items:
          $ref: '#/definitions/models.Menu'
        type: array
      component:
        description: 组件路径,仅在<菜单,菜单项>使用
        type: string
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      icon:
        description: 图标
        type: string
      isFrame:
        description: 是否外链
        type: string
      menuId:
        description: 主键
        type: integer
      menuName:
        description: 名称
        type: string
      menuType:
        description: 类型
        type: string
      method:
        description: 请求方法,仅<接口>使用
        type: string
      noCache:
        description: 不缓存
        type: boolean
      params:
        type: string
      parentId:
        description: 父级主键
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: 路径树
        type: string
      permission:
        description: 权限标识,仅在<菜单项,按钮>使用
        type: string
      sort:
        description: 排序
        type: integer
      title:
        description: 标题
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
      visible:
        description: 显示/隐藏
        type: string
    type: object
  models.OperLog:
    properties:
      businessType:
        description: 操作类型
        type: string
      createdAt:
        type: string
      creator:
        description: 创建人
        type: string
      dataScope:
        description: 数据
        type: string
      deletedAt:
        type: string
      deptName:
        description: 部门名称
        type: string
      jsonResult:
        description: 返回数据
        type: string
      latencyime:
        description: 耗时
        type: string
      method:
        description: 函数
        type: string
      operId:
        description: 主鍵
        type: integer
      operIp:
        description: 客户端ip
        type: string
      operLocation:
        description: 访问位置
        type: string
      operName:
        description: 操作者
        type: string
      operParam:
        description: 请求参数
        type: string
      operTime:
        description: 操作时间
        type: string
      operUrl:
        description: 访问地址
        type: string
      operatorType:
        description: 操作类型
        type: string
      params:
        description: 参数
        type: string
      remark:
        description: 备注
        type: string
      requestMethod:
        description: 请求方式
        type: string
      status:
        description: 操作状态
        type: string
      title:
        description: 操作模块
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
      userAgent:
        description: user_agent
        type: string
    type: object
  models.Post:
    properties:
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      params:
        type: string
      postCode:
        description: 编码,比如CEO,CTO
        type: string
      postId:
        description: 主键
        type: integer
      postName:
        description: 名称
        type: string
      remark:
        description: 备注
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.Role:
    properties:
      admin:
        description: 超级权限(未用)
        type: boolean
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        description: 数据权限
        type: string
      deletedAt:
        type: string
      deptIds:
        description: 角色部门ID列表
        items:
          type: integer
        type: array
      flag:
        description: 标记(未用)
        type: string
      menuIds:
        description: 角色目录ID列表
        items:
          type: integer
        type: array
      params:
        description: (未用)
        type: string
      remark:
        description: 备注
        type: string
      roleId:
        description: 主键
        type: integer
      roleKey:
        description: 标识
        type: string
      roleName:
        description: 名称
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
    type: object
  models.Setting:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        description: 主键
        type: integer
      logo:
        description: Logo
        type: string
      name:
        description: 名称
        type: string
      updatedAt:
        type: string
    type: object
  models.UpSetting:
    properties:
      logo:
        description: 头像
        type: string
      name:
        description: 名称
        type: string
    required:
    - logo
    - name
    type: object
  models.User:
    properties:
      avatar:
        description: 头像
        type: string
      createdAt:
        type: string
      creator:
        description: 创建者
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      deptId:
        description: 部门编码
        type: integer
      email:
        description: 邮箱
        type: string
      nickName:
        description: 昵称
        type: string
      params:
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机号
        type: string
      postId:
        description: 职位编码
        type: integer
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      salt:
        description: 加密盐
        type: string
      sex:
        description: 性别
        type: string
      status:
        description: 状态
        type: string
      updatedAt:
        type: string
      updator:
        description: 更新者
        type: string
      userId:
        description: 主键
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  paginator.Pages:
    properties:
      list:
        type: object
      pageIndex:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  servers.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  system.App:
    properties:
      apiVersion:
        description: api版本
        type: string
      buildTime:
        description: 编译时间
        type: string
      gitCommit:
        description: git提交码
        type: string
      gitFullCommit:
        description: git提交全码
        type: string
      ip:
        type: string
      mem:
        $ref: '#/definitions/system.Mem'
      model:
        description: 型号
        type: string
      pid:
        description: pid
        example: "0"
        type: string
      ppid:
        description: ppid
        example: "0"
        type: string
      projectDir:
        description: 工作目录
        type: string
      runningTime:
        description: 程序运行时间
        type: string
      setupTime:
        description: 程序启动日期
        type: string
      uptime:
        description: 系统运行时间
        type: string
      version:
        description: 版本
        type: string
    type: object
  system.Cpu:
    properties:
      cpuInfo:
        items:
          $ref: '#/definitions/cpu.InfoStat'
        type: array
      numCpu:
        example: "0"
        type: string
      percent:
        type: number
    type: object
  system.Disk:
    properties:
      free:
        type: string
      total:
        type: string
      used:
        type: string
      usedPercent:
        type: number
    type: object
  system.Mem:
    properties:
      free:
        type: string
      total:
        type: string
      used:
        type: string
      usedPercent:
        type: number
    type: object
  system.Os:
    properties:
      arch:
        type: string
      compiler:
        type: string
      goVersion:
        type: string
      gomaxprocs:
        example: "0"
        type: string
      memProfileRate:
        example: "0"
        type: string
      numCpu:
        example: "0"
        type: string
      numGoroutine:
        example: "0"
        type: string
      os:
        type: string
      threads:
        example: "0"
        type: string
    type: object
  system.SystemInfos:
    properties:
      app:
        $ref: '#/definitions/system.App'
      code:
        type: integer
      cpu:
        $ref: '#/definitions/system.Cpu'
      disk:
        $ref: '#/definitions/system.Disk'
      mem:
        $ref: '#/definitions/system.Mem'
      os:
        $ref: '#/definitions/system.Os'
    type: object
  system.UpdatePassword:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  tools.Params:
    properties:
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
    type: object
  tools.SysColumns:
    properties:
      columnComment:
        type: string
      columnId:
        type: integer
      columnName:
        type: string
      columnType:
        type: string
      createdAt:
        type: string
      creator:
        type: string
      deletedAt:
        type: string
      dictType:
        type: string
      edit:
        type: boolean
      fkCol:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      fkLabelId:
        type: string
      fkLabelName:
        type: string
      fkTableName:
        type: string
      fkTableNameClass:
        type: string
      fkTableNamePackage:
        type: string
      goField:
        type: string
      goType:
        type: string
      htmlType:
        type: string
      increment:
        type: boolean
      insert:
        type: boolean
      isEdit:
        type: string
      isIncrement:
        type: string
      isInsert:
        type: string
      isList:
        type: string
      isPk:
        type: string
      isQuery:
        type: string
      isRequired:
        type: string
      jsonField:
        type: string
      list:
        type: string
      pk:
        type: boolean
      query:
        type: boolean
      queryType:
        type: string
      remark:
        type: string
      required:
        type: boolean
      sort:
        type: integer
      superColumn:
        type: boolean
      tableId:
        type: integer
      updatedAt:
        type: string
      updator:
        type: string
      usableColumn:
        type: boolean
    type: object
  tools.SysTables:
    properties:
      businessName:
        type: string
      className:
        description: 类名
        type: string
      columns:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      createdAt:
        type: string
      creator:
        type: string
      crud:
        type: boolean
      dataScope:
        type: string
      deletedAt:
        type: string
      functionAuthor:
        description: 功能作者
        type: string
      functionName:
        description: 功能名称
        type: string
      isActions:
        type: integer
      isAuth:
        type: integer
      isDataScope:
        type: integer
      isLogicalDelete:
        type: string
      logicalDelete:
        type: boolean
      logicalDeleteColumn:
        type: string
      moduleName:
        description: 模块名
        type: string
      options:
        type: string
      packageName:
        description: 包名
        type: string
      params:
        $ref: '#/definitions/tools.Params'
      pkColumn:
        type: string
      pkGoField:
        type: string
      pkJsonField:
        type: string
      remark:
        type: string
      tableComment:
        description: 表备注
        type: string
      tableId:
        description: 表编码
        type: integer
      tableName:
        description: 表名称
        type: string
      tplCategory:
        type: string
      tree:
        type: boolean
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
      updatedAt:
        type: string
      updator:
        type: string
    type: object
info:
  contact: {}
  description: 基于Gin + Vue + Element UI的前后端分离权限管理系统的接口文档
  license:
    name: MIT
    url: https://github.com/x-tardis/go-admin/blob/master/LICENSE.md
  title: go-admin API
  version: 1.0.1
paths:
  /api/v1/captcha:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 获取验证码
      tags:
      - 验证码
  /api/v1/categories:
    get:
      consumes:
      - application/json
      description: 获取分类列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取分类列表
      tags:
      - 文章分类/Category
    post:
      consumes:
      - application/json
      description: 添加分类
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 添加分类
      tags:
      - 文章分类/Category
    put:
      consumes:
      - application/json
      description: 更新分类
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 更新分类
      tags:
      - 文章分类/Category
  /api/v1/categories/:id:
    get:
      consumes:
      - application/json
      description: 获取分类
      parameters:
      - description: 主键
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取分类
      tags:
      - 文章分类/Category
  /api/v1/categories/{ids}:
    get:
      consumes:
      - application/json
      description: 批量删除分类
      parameters:
      - description: 以','分隔的id列表
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 批量删除分类
      tags:
      - 文章分类/Category
  /api/v1/configKey/{key}:
    get:
      consumes:
      - application/json
      description: 通过Key获取配置
      parameters:
      - description: 系统配置的key
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 通过Key获取配置
      tags:
      - 系统配置/Config
  /api/v1/configs:
    get:
      consumes:
      - application/json
      description: 获取系统配置
      parameters:
      - description: 系统配置的Key
        in: query
        name: configKey
        type: string
      - description: 系统配置的名称
        in: query
        name: configName
        type: string
      - description: 系统配置是否内置,由用户指定值,服务只存储
        in: query
        name: configType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取系统配置
      tags:
      - 系统配置/Config
    post:
      consumes:
      - application/json
      description: 创建系统配置
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.Config'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 创建系统配置
      tags:
      - 系统配置/Config
    put:
      consumes:
      - application/json
      description: 更新系统配置
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.Config'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 更新系统配置
      tags:
      - 系统配置/Config
  /api/v1/configs/{id}:
    get:
      consumes:
      - application/json
      description: 获取配置
      parameters:
      - description: 系统配置主键
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取配置
      tags:
      - 系统配置/Config
  /api/v1/configs/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除系统设置
      parameters:
      - description: id,以','分隔的id列表
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 批量删除系统设置
      tags:
      - 系统配置/Config
  /api/v1/contents:
    get:
      consumes:
      - application/json
      description: 获取内容列表
      parameters:
      - description: cateId分类id
        in: query
        name: cateId
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取内容列表
      tags:
      - 文章内容/Content
    post:
      consumes:
      - application/json
      description: 添加内容
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.Content'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 添加内容
      tags:
      - 文章内容/Content
    put:
      consumes:
      - application/json
      description: 更新内容
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.Content'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 更新内容
      tags:
      - 文章内容/Content
  /api/v1/contents/:id:
    get:
      consumes:
      - application/json
      description: 获取内容
      parameters:
      - description: 主键
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取内容
      tags:
      - 文章内容/Content
  /api/v1/contents/{ids}:
    get:
      consumes:
      - application/json
      description: 批量删除内容
      parameters:
      - description: 以','分隔的id列表
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 批量删除内容
      tags:
      - 文章内容/Content
  /api/v1/db/columns/page:
    get:
      description: 数据库表列分页列表 / database table column page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / Tools
  /api/v1/db/tables/page:
    get:
      description: 数据库表分页列表 / database table page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / Tools
  /api/v1/deptTree:
    get:
      consumes:
      - application/json
      description: 分页列表
      parameters:
      - description: deptId
        in: query
        name: deptId
        type: integer
      - description: deptName
        in: query
        name: deptName
        type: string
      - description: deptPath
        in: query
        name: deptPath
        type: string
      - description: Status
        in: query
        name: Status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 分页部门列表数据
      tags:
      - 部门/Dept
  /api/v1/depts:
    delete:
      consumes:
      - application/json
      description: 删除部门信息
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 删除部门信息
      tags:
      - 部门/Dept
    get:
      consumes:
      - application/json
      description: 分页列表
      parameters:
      - description: deptId
        in: query
        name: deptId
        type: integer
      - description: deptName
        in: query
        name: deptName
        type: string
      - description: deptPath
        in: query
        name: deptPath
        type: string
      - description: Status
        in: query
        name: Status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 分页部门列表数据
      tags:
      - 部门/Dept
    post:
      consumes:
      - application/json
      description: 添加部门信息
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.Dept'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 添加部门信息
      tags:
      - 部门/Dept
    put:
      consumes:
      - application/json
      description: 更新部门信息
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: up
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.Dept'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 更新部门信息
      tags:
      - 部门/Dept
  /api/v1/depts/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定Id信息
      parameters:
      - description: deptId
        in: path
        name: deptId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取指定Id信息
      tags:
      - 部门/Dept
  /api/v1/dict/data:
    get:
      consumes:
      - application/json
      description: 获取字典数据列表
      parameters:
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: dictLabel
        in: query
        name: dictLabel
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取字典数据列表
      tags:
      - 字典数据/DictData
    post:
      consumes:
      - application/json
      description: 添加字典数据
      parameters:
      - description: newItem
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.DictData'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "msg": ""}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 添加字典数据
      tags:
      - 字典数据/DictData
    put:
      consumes:
      - application/json
      description: 修改字典数据
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.DictData'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "msg": ""}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 修改字典数据
      tags:
      - 字典数据/DictData
  /api/v1/dict/data/{id}:
    get:
      consumes:
      - application/json
      description: 通过id获取字典数据
      parameters:
      - description: 字典数据主键
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 通过id获取字典数据
      tags:
      - 字典数据/DictData
  /api/v1/dict/data/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除字典数据
      parameters:
      - description: id列表,以','分隔
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "msg": ""}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 批量删除字典数据
      tags:
      - 字典数据/DictData
  /api/v1/dict/databyType/{dictType}:
    get:
      consumes:
      - application/json
      description: 通过字典类型获取字典数据
      parameters:
      - description: dictType
        in: path
        name: dictType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 通过字典类型获取字典数据
      tags:
      - 字典数据/DictData
  /api/v1/dict/type:
    get:
      consumes:
      - application/json
      description: 获取字典列表
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/paginator.Pages'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取字典列表
      tags:
      - 字典类型/DictType
    post:
      consumes:
      - application/json
      description: 创建字典类型
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.DictType'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 创建字典类型
      tags:
      - 字典类型/DictType
    put:
      consumes:
      - application/json
      description: 修改字典类型
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.DictType'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 修改字典类型
      tags:
      - 字典类型/DictType
  /api/v1/dict/type/{id}:
    get:
      consumes:
      - application/json
      description: 通过字典id获取字典类型
      parameters:
      - description: 字典类型编码
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 通过字典id获取字典类型
      tags:
      - 字典类型/DictType
  /api/v1/dict/type/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除字典类型
      parameters:
      - description: id列表,以','分隔
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 批量删除字典类型
      tags:
      - 字典类型/DictType
  /api/v1/dict/typeoption:
    get:
      consumes:
      - application/json
      description: 获取字典类型列表数据
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取字典类型列表数据
      tags:
      - 字典类型/DictType
  /api/v1/filedir:
    get:
      consumes:
      - application/json
      description: 获取filedir树
      parameters:
      - description: 主键
        in: query
        name: id
        type: integer
      - description: label名称
        in: query
        name: label
        type: string
      - description: 父id
        in: query
        name: pId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 获取filedir树
      tags:
      - filedir
    post:
      consumes:
      - application/json
      description: 创建filedir
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.FileDir'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 创建filedir
      tags:
      - filedir
    put:
      consumes:
      - application/json
      description: 更新filedir
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.FileDir'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 更新filedir
      tags:
      - filedir
  /api/v1/filedir/{id}:
    get:
      consumes:
      - application/json
      description: 通过id获取filedir
      parameters:
      - description: 主键
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 通过id获取filedir
      tags:
      - filedir
  /api/v1/filedir/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除filedir
      parameters:
      - description: id列表,以','分隔
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 批量删除filedir
      tags:
      - filedir
  /api/v1/fileinfo:
    get:
      consumes:
      - application/json
      description: 获取fileinfo列表
      parameters:
      - description: 父id
        in: query
        name: pId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 获取fileinfo列表
      tags:
      - fileinfo
    post:
      consumes:
      - application/json
      description: 创建fileinfo
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.FileInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 创建fileinfo
      tags:
      - fileinfo
    put:
      consumes:
      - application/json
      description: 更新fileinfo
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.FileInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 更新fileinfo
      tags:
      - fileinfo
  /api/v1/fileinfo/{id}:
    get:
      consumes:
      - application/json
      description: 通过id获取fileinfo
      parameters:
      - description: 主键
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 通过id获取fileinfo
      tags:
      - fileinfo
  /api/v1/fileinfo/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除fileinfo
      parameters:
      - description: id列表,以','分隔
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 批量删除fileinfo
      tags:
      - fileinfo
  /api/v1/loginlog:
    get:
      consumes:
      - application/json
      description: 获取登录日志列表
      parameters:
      - description: username
        in: query
        name: username
        type: string
      - description: ip
        in: query
        name: ip
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取登录日志列表
      tags:
      - 登录日志
    post:
      consumes:
      - application/json
      description: 添加登录日志
      parameters:
      - description: newItem
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.LoginLog'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 添加登录日志
      tags:
      - 登录日志
    put:
      consumes:
      - application/json
      description: 修改登录日志
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.LoginLog'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 修改登录日志
      tags:
      - 登录日志
  /api/v1/loginlog/{id}:
    get:
      consumes:
      - application/json
      description: 获取登录日志
      parameters:
      - description: infoId
        in: path
        name: infoId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取登录日志
      tags:
      - 登录日志
  /api/v1/loginlog/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除登录日志
      parameters:
      - description: 以逗号（,）分割的id列表,如果为clean,将清空日志
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 批量删除登录日志
      tags:
      - 登录日志
  /api/v1/menuTree/option:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取JSON
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 获取菜单树
      tags:
      - 菜单/Menu
  /api/v1/menuTree/role:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 根据角色名称获取菜单列表数据（左菜单使用）
      tags:
      - 菜单/Menu
  /api/v1/menus:
    get:
      consumes:
      - application/json
      description: 获取Menu树
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: menuName
        in: query
        name: menuName
        type: string
      - description: path
        in: query
        name: path
        type: string
      - description: action
        in: query
        name: action
        type: string
      - description: menuType
        in: query
        name: menuType
        type: string
      - description: visible
        in: query
        name: visible
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 获取Menu树
      tags:
      - 菜单/Menu
    post:
      consumes:
      - application/json
      description: 创建menu
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 创建menu
      tags:
      - 菜单/Menu
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "修改失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改菜单
      tags:
      - 菜单/Menu
  /api/v1/menus/{id}:
    delete:
      consumes:
      - application/json
      description: 删除菜单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 删除菜单
      tags:
      - 菜单/Menu
    get:
      consumes:
      - application/json
      description: 获取Menu数据
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 获取Menu数据
      tags:
      - 菜单/Menu
  /api/v1/operlog:
    get:
      consumes:
      - application/json
      description: 获取操作日志列表
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: operName
        in: query
        name: operName
        type: string
      - description: operIp
        in: query
        name: operIp
        type: string
      - description: businessType
        in: query
        name: businessType
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取操作日志列表
      tags:
      - 操作日志
    post:
      consumes:
      - application/json
      description: 添加操作日志
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.OperLog'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 添加操作日志
      tags:
      - 操作日志
  /api/v1/operlog/{id}:
    get:
      consumes:
      - application/json
      description: 通过id获取登录日志
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 通过id获取登录日志
      tags:
      - 操作日志
  /api/v1/operlog/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除操作日志
      parameters:
      - description: 以逗号（,）分隔的dd
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 批量删除操作日志
      tags:
      - 操作日志
  /api/v1/posts:
    get:
      consumes:
      - application/json
      description: 获取岗位列表
      parameters:
      - description: postName
        in: query
        name: postName
        type: string
      - description: postCode
        in: query
        name: postCode
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取岗位列表
      tags:
      - 岗位/Post
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加岗位
      tags:
      - 岗位/Post
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改岗位
      tags:
      - 岗位/Post
  /api/v1/posts/{id}:
    get:
      consumes:
      - application/json
      description: 获取id岗位信息
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取id岗位信息
      tags:
      - 岗位/Post
  /api/v1/posts/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除数据
      parameters:
      - description: id 列表,以','分隔
        in: path
        name: ids
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            type: string
        "500":
          description: '{"code": 500, "message": "删除失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 批量删除岗位
      tags:
      - 岗位/Post
  /api/v1/public/uploadFile:
    post:
      consumes:
      - multipart/form-data
      description: 上传图片
      parameters:
      - description: type
        in: formData
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 上传图片
      tags:
      - 文件上传
  /api/v1/role/{id}:
    get:
      consumes:
      - application/json
      description: 获取Role数据
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 获取Role数据
      tags:
      - 角色/Role
  /api/v1/roleDeptTree/option/:roleId:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取部门树Label和角色已选的部门项
      tags:
      - 部门/Dept
  /api/v1/roleMenu/menuids/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 获取角色对应的菜单id数组
      tags:
      - 菜单/Menu
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: Get JSON
      parameters:
      - description: roleName
        in: query
        name: roleName
        type: string
      - description: roleKey
        in: query
        name: roleKey
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 角色列表数据
      tags:
      - 角色/Role
    post:
      consumes:
      - application/json
      description: 创建角色
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 创建角色
      tags:
      - 角色/Role
    put:
      consumes:
      - application/json
      description: 修改角色信息
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "修改失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改角色信息
      tags:
      - 角色/Role
  /api/v1/roles/{ids}:
    delete:
      consumes:
      - application/json
      description: 删除用户角色
      parameters:
      - description: id列表,以','分隔
        in: path
        name: ids
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 删除用户角色
      tags:
      - 角色/Role
  /api/v1/roles/disable/{id}:
    patch:
      consumes:
      - application/json
      description: 禁用角色
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "修改失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 禁用角色
      tags:
      - 角色/Role
  /api/v1/roles/enable/{id}:
    patch:
      consumes:
      - application/json
      description: 启动角色
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": -1, "message": "修改失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 启动角色
      tags:
      - 角色/Role
  /api/v1/sys/tables/info:
    post:
      consumes:
      - application/json
      description: 添加表结构
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tables
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加表结构
      tags:
      - 工具 - 生成表
    put:
      consumes:
      - application/json
      description: 修改表结构
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tools.SysTables'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改表结构
      tags:
      - 工具 - 生成表
  /api/v1/sys/tables/info/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: configKey
        in: path
        name: configKey
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取配置
      tags:
      - 工具 - 生成表
  /api/v1/sys/tables/info/{ids}:
    delete:
      description: 删除表结构
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除表结构
      tags:
      - 工具 - 生成表
  /api/v1/sys/tables/page:
    get:
      description: 生成表分页列表
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 分页列表数据
      tags:
      - 工具 - 生成表
  /api/v1/system/info:
    get:
      consumes:
      - application/json
      description: 获取系统信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功回复
          schema:
            $ref: '#/definitions/system.SystemInfos'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "404":
          description: 未找到相关信息
          schema:
            $ref: '#/definitions/servers.Response'
        "417":
          description: 客户端请求头错误
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 系统信息
      tags:
      - 系统信息
  /api/v1/system/ping:
    get:
      consumes:
      - application/json
      description: ping/pong test
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/servers.Response'
      summary: ping/pong test
      tags:
      - 系统信息
  /api/v1/system/setting:
    get:
      consumes:
      - application/json
      description: 查询系统设置
      produces:
      - application/json
      responses:
        "200":
          description: 系统设置信息
          schema:
            $ref: '#/definitions/models.Setting'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 查询系统设置
      tags:
      - 系统设置
    post:
      consumes:
      - application/json
      description: 更新系统设置
      parameters:
      - description: 更新的信息
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.UpSetting'
      produces:
      - application/json
      responses:
        "200":
          description: 系统设置信息
          schema:
            $ref: '#/definitions/models.Setting'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 更新系统设置
      tags:
      - 系统设置
  /api/v1/user/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 修改头像
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "msg": ""}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 修改头像
      tags:
      - 个人中心/UserCenter
  /api/v1/user/info:
    get:
      consumes:
      - application/json
      description: 获取用户信息
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取用户信息
      tags:
      - 个人中心/UserCenter
  /api/v1/user/password:
    put:
      consumes:
      - application/json
      description: 修改密码
      parameters:
      - description: update password
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/system.UpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "msg": ""}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 个人中心/UserCenter
  /api/v1/user/profile:
    get:
      consumes:
      - application/json
      description: 获取个人中心用户信息
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取个人中心用户信息
      tags:
      - 个人中心/UserCenter
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: 获取用户列表
      parameters:
      - description: username
        in: query
        name: username
        type: string
      - description: phone
        in: query
        name: phone
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: deptId
        in: query
        name: deptId
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取用户列表
      tags:
      - 用户/User
    post:
      consumes:
      - application/json
      description: 创建用户
      parameters:
      - description: new item
        in: body
        name: newItem
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "message": ""}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 创建用户
      tags:
      - 用户/User
    put:
      consumes:
      - application/json
      description: 修改用户数据
      parameters:
      - description: update item
        in: body
        name: up
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "msg": ""}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 修改用户数据
      tags:
      - 用户/User
  /api/v1/users/:
    get:
      consumes:
      - application/json
      description: 获取用户角色和职位
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取用户角色和职位
      tags:
      - 用户/User
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: 获取用户
      parameters:
      - description: 主键
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/servers.Response'
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 获取用户
      tags:
      - 用户/User
  /api/v1/users/{ids}:
    delete:
      consumes:
      - application/json
      description: 批量删除用户数据
      parameters:
      - description: 以','分隔的id列列
        in: path
        name: ids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "msg": ""}'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 批量删除用户数据
      tags:
      - 用户/User
  /login:
    post:
      consumes:
      - application/json
      description: |-
        登陆,获取token
        注意：开发模式：需要注意全部字段不能为空，账号,密码外可以传入0值
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "expire": "2019-08-07T12:45:48+08:00", "token": "xxxx" }'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      summary: 登陆
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: 退出登录
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "msg": "成功退出系统" }'
          schema:
            type: string
        "400":
          description: 错误请求
          schema:
            $ref: '#/definitions/servers.Response'
        "401":
          description: 鉴权失败
          schema:
            $ref: '#/definitions/servers.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/servers.Response'
      security:
      - Bearer: []
      summary: 退出登录
      tags:
      - auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
